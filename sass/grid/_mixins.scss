// Background image
  @function image-url($url) {
    @return url("#{$image-url}#{$url}");
  }

// Media queries
  @mixin breakpoint($breakpoint) {
    // If the key exists in the map
    @if map-has-key($breakpoints, $breakpoint) {
      // Prints a media query based on the value
      @media (min-width: map-get($breakpoints, $breakpoint)) {
        @content;
      }
    }
    // If the key doesn't exist in the map
    @else {
      @warn "There is no breackpoint - `#{$breakpoint}`. "
          + "Available breakpoints are: #{map-keys($breakpoints)}.";
    }
  }

// Burbon Helpers
  @function is-length($value) {
    @return type-of($value) != "null" and (str-slice($value + "", 1, 4) == "calc"
         or index(auto inherit initial 0, $value)
         or (type-of($value) == "number" and not(unitless($value))));
  }

  @function unpack($shorthand, $length: 4) {
    @for $i from 1 through $length {
      @if (length($shorthand) < $i) {
        $shorthand: append($shorthand, nth($shorthand, floor($i / 2)));
      }
    }
    @return $shorthand;
  }

  @mixin position($position: relative, $coordinates: null null null null) {
    @if type-of($position) == list {
      $coordinates: $position;
      $position: relative;
    }

    $coordinates: unpack($coordinates);

    $offsets: (
      top:    nth($coordinates, 1),
      right:  nth($coordinates, 2),
      bottom: nth($coordinates, 3),
      left:   nth($coordinates, 4)
    );

    position: $position;

    @each $offset, $value in $offsets {
      @if is-length($value) {
        #{$offset}: $value;
      }
    }
  }